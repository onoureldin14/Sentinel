# This policy uses the Sentinel tfrun import to check the proposed monthly cost versus the limit cost provided

# Import common-functions/tfrun-functions/tfrun-functions.sentinel
# with alias "run"
import "tfrun"
import "decimal"

#Get Monthly cost
monthlyCost =  tfrun.cost_estimate.proposed_monthly_cost


# Determine the Limited cost for resource provisioning
limitedCost = "10"

validate_cost = rule {
			monthlyCost < limitedCost
}

if validate_cost is false {
		print("This is too expensive dude! the proposed cost is",monthlyCost,"and your limit is",limitedCost)
	}

main = rule {
  validate_cost
}
